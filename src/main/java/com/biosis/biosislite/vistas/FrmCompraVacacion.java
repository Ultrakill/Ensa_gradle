/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.biosis.biosislite.vistas;

import com.biosis.biosislite.controladores.Controlador;
import com.biosis.biosislite.controladores.EmpleadoControlador;
import com.biosis.biosislite.controladores.PeriodoControlador;
import com.biosis.biosislite.controladores.SaldoVacacionalControlador;
import com.biosis.biosislite.controladores.VacacionControlador;
import com.biosis.biosislite.entidades.AsignacionPermiso;
import com.biosis.biosislite.entidades.Periodo;
import com.biosis.biosislite.entidades.SaldoVacacional;
import com.biosis.biosislite.entidades.TipoPermiso;
import com.biosis.biosislite.entidades.Vacacion;
import com.biosis.biosislite.vistas.dialogos.DlgEmpleado;
import com.biosis.biosislite.vistas.dialogos.DlgInterrupcionVacacion;
import com.biosis.biosislite.vistas.modelos.MTAsignarVacacion;
import com.biosis.biosislite.vistas.modelos.MTVacacion;
import com.personal.utiles.FormularioUtil;
import com.personal.utiles.ReporteUtil;
import com.biosis.biosislite.controladores.CompraVacacionControlador;
import com.biosis.biosislite.controladores.TCAnalisisControlador;
import com.biosis.biosislite.entidades.CompraVacacion;
import com.biosis.biosislite.entidades.InterrupcionVacacion;
import com.biosis.biosislite.entidades.escalafon.Empleado;
import java.awt.Component;
import java.io.File;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import com.biosis.biosislite.utiles.UsuarioActivo;
import com.biosis.biosislite.vistas.dialogos.DlgReprogramarVacacion;
import com.biosis.biosislite.vistas.modelos.MTCompraVacacion;

/**
 *
 * @author fesquivelc
 */
public class FrmCompraVacacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form CRUDPeriodo
     */
    private List<CompraVacacion> listado;
    private List<Empleado> integrantes;
    private CompraVacacionControlador controlador;
    private EmpleadoControlador ec;
    private int accion;
    private TipoPermiso tipoSeleccionado;
    private Empleado empleadoBusqueda;
    private Empleado empleadoSeleccionado;
    private PeriodoControlador pc;
    private final ReporteUtil reporteador;
    //
    private Periodo periodo;
    private String empleado;

    public FrmCompraVacacion() {
        initComponents();
        reporteador = new ReporteUtil();
        inicializar();
        bindeoSalvaje();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlListado = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new org.jdesktop.swingx.JXTable();
        lblBusqueda = new org.jdesktop.swingx.JXBusyLabel();
        txtEmpleado = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        pnlNavegacion = new javax.swing.JPanel();
        btnPrimero = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        spPagina = new javax.swing.JSpinner();
        txtTotal = new javax.swing.JTextField();
        btnSiguiente = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        cboTamanio = new javax.swing.JComboBox();
        dcFechaInicio1 = new com.toedter.calendar.JDateChooser();
        dcFechaFin1 = new com.toedter.calendar.JDateChooser();
        pnlDatos = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtEmpleadoSeleccionado = new javax.swing.JTextField();
        pnlFHInicio = new javax.swing.JPanel();
        pnlFHInicio1 = new javax.swing.JPanel();
        dcFecha = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboPeriodo = new javax.swing.JComboBox();
        txtDocumento = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        pnlResumen = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pnlVacacionesPedidas = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtLV = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSab = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDom = new javax.swing.JTextField();
        txtSaldo = new javax.swing.JTextField();
        txtDias = new javax.swing.JTextField();

        setClosable(true);
        setMaximizable(true);
        setTitle("REGISTRO DE COMPRA DE VACACIONES");
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        layout.rowHeights = new int[] {0};
        getContentPane().setLayout(layout);

        pnlListado.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Compras de vacaciones registradas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 14))); // NOI18N
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0};
        pnlListado.setLayout(jPanel1Layout);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        btnNuevo.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel3.add(btnNuevo);

        btnModificar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel3.add(btnModificar);

        jButton2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButton2.setText("Interrupci√≥n");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jButton3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButton3.setText("Reprogramar");
        jPanel3.add(jButton3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 15;
        pnlListado.add(jPanel3, gridBagConstraints);

        tblTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblTablaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblTabla);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlListado.add(jScrollPane1, gridBagConstraints);

        lblBusqueda.setText("Empleado");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(lblBusqueda, gridBagConstraints);

        txtEmpleado.setEditable(false);
        txtEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmpleadoKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlListado.add(txtEmpleado, gridBagConstraints);

        jButton4.setText("...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(jButton4, gridBagConstraints);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(btnLimpiar, gridBagConstraints);

        jLabel9.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(jLabel9, gridBagConstraints);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(btnBuscar, gridBagConstraints);

        pnlNavegacion.setLayout(new java.awt.GridLayout(1, 0, 2, 0));

        btnPrimero.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnPrimero.setText("<<");
        btnPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeroActionPerformed(evt);
            }
        });
        pnlNavegacion.add(btnPrimero);

        btnAnterior.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnAnterior.setText("<");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });
        pnlNavegacion.add(btnAnterior);

        spPagina.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        spPagina.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        spPagina.setMinimumSize(new java.awt.Dimension(60, 20));
        spPagina.setPreferredSize(new java.awt.Dimension(60, 20));
        spPagina.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spPaginaStateChanged(evt);
            }
        });
        pnlNavegacion.add(spPagina);

        txtTotal.setEditable(false);
        txtTotal.setColumns(3);
        txtTotal.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setText("1");
        pnlNavegacion.add(txtTotal);

        btnSiguiente.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnSiguiente.setText(">");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });
        pnlNavegacion.add(btnSiguiente);

        btnUltimo.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnUltimo.setText(">>");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });
        pnlNavegacion.add(btnUltimo);

        cboTamanio.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cboTamanio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "20", "25", "40", "50" }));
        cboTamanio.setMinimumSize(new java.awt.Dimension(53, 24));
        cboTamanio.setPreferredSize(new java.awt.Dimension(53, 24));
        cboTamanio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTamanioActionPerformed(evt);
            }
        });
        pnlNavegacion.add(cboTamanio);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 15;
        pnlListado.add(pnlNavegacion, gridBagConstraints);

        dcFechaInicio1.setDateFormatString("dd.MM.yyyy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        pnlListado.add(dcFechaInicio1, gridBagConstraints);

        dcFechaFin1.setDateFormatString("dd.MM.yyyy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        pnlListado.add(dcFechaFin1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pnlListado, gridBagConstraints);

        pnlDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de compra de vacaci√≥n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 14))); // NOI18N
        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0, 0, 0, 0, 0};
        jPanel2Layout.rowHeights = new int[] {0, 5, 0};
        pnlDatos.setLayout(jPanel2Layout);

        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanel4Layout.rowHeights = new int[] {0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0};
        jPanel4.setLayout(jPanel4Layout);

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setText("Empleado:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel1, gridBagConstraints);

        txtEmpleadoSeleccionado.setEditable(false);
        txtEmpleadoSeleccionado.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtEmpleadoSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpleadoSeleccionadoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        jPanel4.add(txtEmpleadoSeleccionado, gridBagConstraints);

        java.awt.GridBagLayout pnlFHInicioLayout = new java.awt.GridBagLayout();
        pnlFHInicioLayout.columnWidths = new int[] {0, 5, 0, 5, 0};
        pnlFHInicioLayout.rowHeights = new int[] {0};
        pnlFHInicio.setLayout(pnlFHInicioLayout);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(pnlFHInicio, gridBagConstraints);

        java.awt.GridBagLayout pnlFHInicio1Layout = new java.awt.GridBagLayout();
        pnlFHInicio1Layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        pnlFHInicio1Layout.rowHeights = new int[] {0};
        pnlFHInicio1.setLayout(pnlFHInicio1Layout);

        dcFecha.setDateFormatString("dd.MM.yyyy");
        dcFecha.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        pnlFHInicio1.add(dcFecha, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(pnlFHInicio1, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel7.setText("Fecha de compra:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel7, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        jPanel4.add(jButton1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setText("Per√≠odo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel2, gridBagConstraints);

        cboPeriodo.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cboPeriodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPeriodoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(cboPeriodo, gridBagConstraints);

        txtDocumento.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(txtDocumento, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel5.setText("Documento de referencia:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel4.add(jLabel5, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        btnGuardar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel5.add(btnGuardar);

        btnCancelar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel5.add(btnCancelar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.weighty = 0.1;
        jPanel4.add(jPanel5, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel12.setText("D√≠as a comprar:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel12, gridBagConstraints);

        pnlResumen.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Res√∫men de vacaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 14))); // NOI18N
        java.awt.GridBagLayout pnlResumenLayout = new java.awt.GridBagLayout();
        pnlResumenLayout.columnWidths = new int[] {0, 5, 0};
        pnlResumenLayout.rowHeights = new int[] {0, 5, 0};
        pnlResumen.setLayout(pnlResumenLayout);

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel6.setText("Vacaciones pedidas:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlResumen.add(jLabel6, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel11.setText("Saldo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlResumen.add(jLabel11, gridBagConstraints);

        pnlVacacionesPedidas.setLayout(new javax.swing.BoxLayout(pnlVacacionesPedidas, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setText("LUNES - VIERNES:");
        pnlVacacionesPedidas.add(jLabel3);

        txtLV.setColumns(5);
        txtLV.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtLV.setText("0");
        pnlVacacionesPedidas.add(txtLV);

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel8.setText("SAB:");
        pnlVacacionesPedidas.add(jLabel8);

        txtSab.setColumns(5);
        txtSab.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtSab.setText("0");
        pnlVacacionesPedidas.add(txtSab);

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel10.setText("DOM:");
        pnlVacacionesPedidas.add(jLabel10);

        txtDom.setColumns(5);
        txtDom.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtDom.setText("0");
        pnlVacacionesPedidas.add(txtDom);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlResumen.add(pnlVacacionesPedidas, gridBagConstraints);

        txtSaldo.setColumns(5);
        txtSaldo.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtSaldo.setText("30");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlResumen.add(txtSaldo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(pnlResumen, gridBagConstraints);

        txtDias.setColumns(5);
        txtDias.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(txtDias, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pnlDatos, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.accion = 0;
        this.controles(accion);
        FormularioUtil.limpiarComponente(this.pnlDatos);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        this.accion = Controlador.NUEVO;
        controlador.prepararCrear();
        this.controles(accion);
        integrantes.clear();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        int fila = tblTabla.getSelectedRow();
        if (fila != -1) {
            this.accion = Controlador.MODIFICAR;
            controlador.setSeleccionado(this.listado.get(fila));
            periodo = periodoList.get(cboPeriodo.getSelectedIndex());
            empleado = empleadoSeleccionado.getNroDocumento();
            if (empleado == null) {
                System.out.println("Corregir aca carajo!");
            }
            this.controles(accion);
            FormularioUtil.activarComponente(txtEmpleadoSeleccionado, false);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

//    private final SaldoVacacionalControlador svc = new SaldoVacacionalControlador();
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (erroresFormulario()) {
            return;
        }
        if (FormularioUtil.dialogoConfirmar(this, accion)) {
            CompraVacacion seleccionada = this.controlador.getSeleccionado();

//            FormularioUtil.convertirMayusculas(this.pnlDatos);
            if (accion == Controlador.NUEVO) {
                seleccionada.setEmpleado(empleadoSeleccionado);
            }
            if (seleccionada.getEmpleado() != null) {
                System.out.println("Hay empleado");
            } else {
                System.out.println("No hay empleado");
            }
            seleccionada.setFecha(dcFecha.getDate());
            seleccionada.setDocumentoReferencia(txtDocumento.getText());
            seleccionada.setPeriodo(periodoList.get(cboPeriodo.getSelectedIndex()));
            seleccionada.setDiasCompra(Integer.parseInt(txtDias.getText()));

            if (controlador.accion(accion)) {
//                List<String> dni = new ArrayList<>();
//                dni.add(seleccionada.getEmpleado().getNroDocumento());
//                retrocederTiempo(dni, seleccionada.getFechaInicio());
//                SaldoVacacional sv = buscarCrear(empleadoSeleccionado, seleccionada.getPeriodo());
//                int[] saldos = obtenerSaldos(empleadoSeleccionado,seleccionada.getPeriodo());
//                sv.setDiasRestantes(30 - (saldos[0] + saldos[1] + saldos[2]));
//                sv.setLunesViernes(saldos[0]);
//                sv.setSabado(saldos[1]);
//                sv.setDomingo(saldos[2]);
//                svc.modificar(sv);

                FormularioUtil.mensajeExito(this, accion);
                System.out.println("SELECCION: " + seleccionada.getId());
                this.accion = 0;
                FormularioUtil.limpiarComponente(this.pnlDatos);
                this.controles(accion);
                this.actualizarTabla();
//                if (FormularioUtil.dialogoConfirmar(this, 4)) {
//                    imprimirBoleta(seleccionada);
//                }
            } else {
                FormularioUtil.mensajeError(this, accion);
            }

        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private final TCAnalisisControlador tcac = new TCAnalisisControlador();

    private void retrocederTiempo(List<String> dnis, Date fechaInicio) {
        tcac.retrocederTiempo(dnis, fechaInicio);
    }
    private void tblTablaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTablaMouseReleased
        // TODO add your handling code here:
        int fila = tblTabla.getSelectedRow();
        if (fila != -1) {
            CompraVacacion vacacion = listado.get(fila);

            mostrar(vacacion);
        }
    }//GEN-LAST:event_tblTablaMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DlgEmpleado dialogo = new DlgEmpleado(this);
        empleadoSeleccionado = dialogo.getSeleccionado();
        if (empleadoSeleccionado != null) {
            txtEmpleadoSeleccionado.setText(
                    empleadoSeleccionado.getPaterno()
                    + " " + empleadoSeleccionado.getMaterno()
                    + " " + empleadoSeleccionado.getNombre());
            actualizarResumenVacaciones(empleadoSeleccionado);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtEmpleadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpleadoKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            lblBusqueda.setBusy(true);
            buscar();
            lblBusqueda.setBusy(false);
        }
    }//GEN-LAST:event_txtEmpleadoKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DlgEmpleado dialogo = new DlgEmpleado(this);
        this.empleadoBusqueda = dialogo.getSeleccionado();
        if (this.empleadoBusqueda != null) {
            this.txtEmpleado.setText(
                    empleadoBusqueda.getNroDocumento()
                    + " " + empleadoBusqueda.getPaterno()
                    + " " + empleadoBusqueda.getMaterno()
                    + " " + empleadoBusqueda.getNombre());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        FormularioUtil.limpiarComponente(this.txtEmpleado);
        this.empleadoBusqueda = null;
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        System.out.println("BUSCAR");
        lblBusqueda.setBusy(true);
        paginaActual = 1;
        buscar();
        actualizarControlesNavegacion();
        lblBusqueda.setBusy(false);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeroActionPerformed
        // TODO add your handling code here:
        primero();
    }//GEN-LAST:event_btnPrimeroActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // TODO add your handling code here:
        anterior();
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void spPaginaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spPaginaStateChanged
        // TODO add your handling code here:
        this.seleccionPagina();
    }//GEN-LAST:event_spPaginaStateChanged

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
        siguiente();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        // TODO add your handling code here:
        ultimo();
    }//GEN-LAST:event_btnUltimoActionPerformed

    private void cboTamanioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTamanioActionPerformed
        // TODO add your handling code here:
        this.paginaActual = 1;
        buscar();
        this.actualizarControlesNavegacion();
    }//GEN-LAST:event_cboTamanioActionPerformed

    private void cboPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPeriodoActionPerformed
        // TODO add your handling code here:
        actualizarResumenVacaciones(empleadoSeleccionado);
    }//GEN-LAST:event_cboPeriodoActionPerformed

    private void txtEmpleadoSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpleadoSeleccionadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpleadoSeleccionadoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int fila = tblTabla.getSelectedRow();
        if(fila != -1){
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JComboBox cboPeriodo;
    private javax.swing.JComboBox cboTamanio;
    private com.toedter.calendar.JDateChooser dcFecha;
    private com.toedter.calendar.JDateChooser dcFechaFin1;
    private com.toedter.calendar.JDateChooser dcFechaInicio1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXBusyLabel lblBusqueda;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JPanel pnlFHInicio;
    private javax.swing.JPanel pnlFHInicio1;
    private javax.swing.JPanel pnlListado;
    private javax.swing.JPanel pnlNavegacion;
    private javax.swing.JPanel pnlResumen;
    private javax.swing.JPanel pnlVacacionesPedidas;
    private javax.swing.JSpinner spPagina;
    private org.jdesktop.swingx.JXTable tblTabla;
    private javax.swing.JTextField txtDias;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtDom;
    private javax.swing.JTextField txtEmpleado;
    private javax.swing.JTextField txtEmpleadoSeleccionado;
    private javax.swing.JTextField txtLV;
    private javax.swing.JTextField txtSab;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void mostrar(CompraVacacion compraVacacion) {
        Empleado e = ec.buscarPorId(compraVacacion.getEmpleado());
        txtEmpleadoSeleccionado.setText(e.getPaterno() + " " + e.getMaterno() + " " + e.getNombre());
        dcFecha.setDate(compraVacacion.getFecha());
        cboPeriodo.setSelectedItem(compraVacacion.getPeriodo());
        txtDocumento.setText(compraVacacion.getDocumentoReferencia());
        txtDias.setText(compraVacacion.getDiasCompra() + "");
        actualizarResumenVacaciones(e);

    }

    private List<Periodo> periodoList;

    private void bindeoSalvaje() {
        listado = new ArrayList<>();
        listado = ObservableCollections.observableList(listado);
        periodoList = pc.buscarTodosOrden();

        integrantes = ObservableCollections.observableList(new ArrayList<Empleado>());

//        String[] columnasIntegrantes = {"Nro Documento", "Empleado"};
        JComboBoxBinding bindingPeriodo = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ, periodoList, cboPeriodo);

        bindingPeriodo.bind();

        MTCompraVacacion mt = new MTCompraVacacion(listado);
//        MTEmpleado mtIntegrantes = new MTEmpleado(integrantes, columnasIntegrantes);
        tblTabla.setModel(mt);
//        tblTabla.setModel(mtIntegrantes);

        cboPeriodo.setRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if (value instanceof Periodo) {
                    value = ((Periodo) value).getAnio();
                }
                return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            }

        });

        actualizarTabla();
    }

    private void actualizarTabla() {
        listado.clear();
        empleadoBusqueda = null;
        FormularioUtil.limpiarComponente(txtEmpleado);
        paginaActual = 1;
        buscar();
        actualizarControlesNavegacion();
        tblTabla.packAll();
    }

    private void mostrarIntegrantes(List<String> listadoDNI) {
        integrantes.clear();
        integrantes.addAll(ec.buscarPorLista(listadoDNI));
        tblTabla.packAll();
    }

    private void inicializar() {
        this.accion = 0;
        ec = new EmpleadoControlador();
        controlador = CompraVacacionControlador.getInstance();
        pc = new PeriodoControlador();
//        FormularioUtil.modeloSpinnerFechaHora(dcFechaInicio, "dd/MM/yyyy");
//        FormularioUtil.modeloSpinnerFechaHora(FechaFin, "dd/MM/yyyy");
//        FormularioUtil.modeloSpinnerFechaHora(spFechaInicio1, "dd/MM/yyyy");
//        FormularioUtil.modeloSpinnerFechaHora(spFechaFin1, "dd/MM/yyyy");
        this.controles(accion);
//        mtVac = new MTVacacion(new ArrayList<Vacacion>());
//        tblVacaciones.setModel(mtVac);
    }

    private void controles(int accion) {
        boolean bandera = accion == Controlador.NUEVO || accion == Controlador.MODIFICAR;

        FormularioUtil.activarComponente(this.pnlListado, !bandera);
        FormularioUtil.activarComponente(this.pnlDatos, bandera);
        FormularioUtil.activarComponente(this.pnlVacacionesPedidas, false);
        FormularioUtil.activarComponente(this.txtSaldo, false);

        if (accion != Controlador.MODIFICAR) {
            FormularioUtil.limpiarComponente(this.pnlDatos);

        }
    }

//    private List<String> obtenerListadoDNI(List<AsignacionPermiso> detalles) {
//        List<String> listadoDNI = new ArrayList<>();
//        for (AsignacionPermiso detalle : detalles) {
//            listadoDNI.add(detalle.getEmpleado());
//        }
//        return listadoDNI;
//    }
    private MTVacacion mtVac;

//    public void agregarEmpleado(Empleado empleado) {
//        integrantes.add(empleado);
//
//        AsignacionPermiso detalle = new AsignacionPermiso();
//        detalle.setEmpleado(empleado.getNroDocumento());
//        detalle.setPermiso(controlador.getSeleccionado());
//
//        controlador.getSeleccionado().getAsignacionPermisoList().add(detalle);
//    }
//    private void quitarEmpleado(int fila) {
//        integrantes.remove(fila);
//        controlador.getSeleccionado().getAsignacionPermisoList().remove(fila);
//    }
    private int paginaActual = 1;
    private int totalPaginas = 0;
    private int tamanioPagina = 0;

    private void buscar() {
        String busqueda = txtEmpleado.getText();
        tamanioPagina = Integer.parseInt(cboTamanio.getSelectedItem().toString());

        Date fechaInicio = dcFechaInicio1.getDate();
        Date fechaFin = dcFechaFin1.getDate();
        listado.clear();
        List<CompraVacacion> lista = this.listar(empleadoBusqueda, fechaInicio, fechaFin, paginaActual, tamanioPagina);
//        System.out.println("LISTA: " + lista.size());
        listado.addAll(lista);

        tblTabla.packAll();
    }

    private List<CompraVacacion> listar(Empleado empleado, Date fechaInicio, Date fechaFin, int pagina, int tamanio) {
        int total;

        if (empleado == null) {
            total = controlador.contarXFecha(fechaInicio, fechaFin);
        } else {
            total = controlador.contarXEmpleadoXFecha(empleado, fechaInicio, fechaFin);
        }

        if (total % tamanio == 0) {
            totalPaginas = total / tamanio;
        } else {
            totalPaginas = (total / tamanio) + 1;
        }

        if (totalPaginas == 0) {
            totalPaginas = 1;
        }

        if (empleado == null) {
            return controlador.buscarXFecha(fechaInicio, fechaFin, (pagina - 1) * tamanio, tamanio);
        } else {
            return controlador.buscarXEmpleadoXFecha(empleado, fechaInicio, fechaFin, (pagina - 1) * tamanio, tamanio);
        }

    }

    private void siguiente() {
        paginaActual++;
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void ultimo() {
        paginaActual = totalPaginas;
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void primero() {
        paginaActual = 1;
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void anterior() {
        paginaActual--;
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void seleccionPagina() {
        paginaActual = (int) spPagina.getValue();
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void actualizarControlesNavegacion() {
        spPagina.setValue(paginaActual);
        txtTotal.setText(totalPaginas + "");

        SpinnerNumberModel modeloSP = (SpinnerNumberModel) spPagina.getModel();
        Comparable<Integer> maximo = totalPaginas;
        modeloSP.setMaximum(maximo);

        this.btnSiguiente.setEnabled(paginaActual != totalPaginas);
        this.btnUltimo.setEnabled(paginaActual != totalPaginas);

        this.btnAnterior.setEnabled(paginaActual != 1);
        this.btnPrimero.setEnabled(paginaActual != 1);
    }

    private void imprimirBoleta(Vacacion seleccionada) {
        File reporte = new File("reportes/r_boleta_vacaciones.jasper");
//        DAOMINEDU dao = new DAOMINEDU(Empleado.class);
        Map<String, Object> parametros = new HashMap<>();
        parametros.put("vacacion_id", seleccionada.getId());
        System.out.println("NULL 1 ");
        parametros.put("usuario", UsuarioActivo.getUsuario().getLogin());
        System.out.println("NULL 2 ");
        parametros.put("CONEXION_EMPLEADOS", ec.getDao().getConexion());
        System.out.println("NULL 3 ");

        reporteador.setConn(controlador.getDao().getConexion());
        reporteador.generarReporte(reporte, parametros, JOptionPane.getFrameForComponent(this));

    }

    private void actualizarResumenVacaciones(Empleado empleado) {
        if (empleado != null && cboPeriodo.getSelectedIndex() != -1) {

            this.cargarSaldoVacacional((Periodo) cboPeriodo.getSelectedItem(), empleado);
        }
    }
    private final SaldoVacacionalControlador svc = new SaldoVacacionalControlador();

    private final Calendar calendar = Calendar.getInstance();

//    public SaldoVacacional buscarCrear(Empleado empleado, Periodo periodo) {
//        SaldoVacacional sv = svc.buscarXPeriodo(empleado, periodo);
//        Date fechaContrato = empleado.getFichaLaboral().getFechaInicio();
//        calendar.setTime(fechaContrato);
//        if (sv == null && periodo.getAnio() > calendar.get(Calendar.YEAR)) {
//            //CREAMOS
//            sv = new SaldoVacacional();
//            //OBTENEMOS SI LE CORRESPONDEN VACACIONES ACORDE A LEY
//
//            if (calendar.get(Calendar.YEAR) < periodo.getAnio()) {
//                sv.setDiasRestantes(30);
//            } else {
//                sv.setDiasRestantes(0);
//            }
//            calendar.set(Calendar.YEAR, periodo.getAnio());
//            sv.setFechaDesde(calendar.getTime());
//            calendar.add(Calendar.YEAR, 1);
//            sv.setFechaHasta(calendar.getTime());
//            sv.setEmpleado(empleado);
//            sv.setLunesViernes(0);
//            sv.setSabado(0);
//            sv.setDomingo(0);
//            sv.setPeriodo(periodo);
//            svc.modificar(sv);
//        }
//        sv = svc.buscarXPeriodo(empleado, periodo);
//        return sv;
//    }
    private boolean erroresFormulario() {
        int errores = 0;
        Date fechaInicio = dcFecha.getDate();

        String mensaje = "";

//        Date fechaFin = dcFechaFin.getDate();
//        if (fechaInicio.compareTo(fechaFin) > 0) {
//            errores++;
//            mensaje = ">La fecha de inicio debe ser menor que la fecha de fin\n";
//        }
//        //Traemos los dnis de los empleados
////        String empleadoPrueba = this.controlador.getSeleccionado().getEmpleado();
////        System.out.println(empleadoPrueba);
//        Vacacion paraComprobar = this.controlador.getSeleccionado();
//        if(paraComprobar != null){
//            System.out.println("No es null"+paraComprobar.getEmpleado());
//        }
//        //aSystem.out.println("dni" + empleadoPrueba.getNroDocumento());
//        //Permiso paraComprobar = this.controlador.getSeleccionado();
//        List<Vacacion> vacaciones = controlador.buscarXEmpleadoXPeriodo(paraComprobar.getEmpleado(), periodoList.get(cboPeriodo.getSelectedIndex()));
//        for (Vacacion vacacion : vacaciones) {
//            if((vacacion.getFechaInicio().compareTo(fechaInicio) == 0) || 
//               (vacacion.getFechaInicio().compareTo(fechaInicio) < 0) || 
//               (vacacion.getFechaFin().compareTo(fechaFin) == 0) ||
//               (vacacion.getFechaFin().compareTo(fechaFin) > 0 )    ){
//               errores++;
//               mensaje = "El empleado "+vacacion.getEmpleado()+" tiene conflicto con una vacaci√≥n a√±adida anteriormente \n Ingrese otro rango de fechas \n";
//               break;
//            }    
//        }
//            
        if (errores > 0) {
            JOptionPane.showMessageDialog(this, "Se ha(n) encontrado el(los) siguiente(s) error(es):\n" + mensaje, "Mensaje del sistema", JOptionPane.ERROR_MESSAGE);
        }
        return errores != 0;
    }

    private final Calendar cal = Calendar.getInstance();
    private final VacacionControlador vacc = new VacacionControlador();

    private void cargarSaldoVacacional(Periodo periodo, Empleado empleado) {
        List<Vacacion> vacaciones = this.vacc.buscarXEmpleadoXPeriodoNoReprogramacion(empleado, periodo);
        Calendar iterador = Calendar.getInstance();
        int lunesViernes = 0;
        int sab = 0;
        int dom = 0;
        int saldo = 30;
        List<CompraVacacion> compras = cmpvacc.buscarXEmpleadoXPeriodo(empleado, periodo);
        for (CompraVacacion compra : compras) {
            saldo -= compra.getDiasCompra();
        }
        for (Vacacion vacacion : vacaciones) {
            iterador.setTime(vacacion.getFechaInicio());
            InterrupcionVacacion interrupcion = vacacion.getInterrupcionVacacion();
            while (iterador.getTime().compareTo(vacacion.getFechaFin()) <= 0) {
                if (interrupcion != null) {
                    if (interrupcion.getFechaInicio().compareTo(iterador.getTime()) <= 0
                            && interrupcion.getFechaFin().compareTo(iterador.getTime()) >= 0) {
                        //no pasa nada
                    } else {
                        if (iterador.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY
                                && iterador.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY) {
                            lunesViernes++;
                        }
                    }
                }
            }
        }

        int division = lunesViernes / 5;
        sab = division;
        dom = division;

        saldo = saldo - (lunesViernes + sab + dom);

        txtLV.setText(lunesViernes + "");
        txtSab.setText(sab + "");
        txtDom.setText(dom + "");
        txtSaldo.setText(saldo + "");
    }

    private final CompraVacacionControlador cmpvacc = CompraVacacionControlador.getInstance();
}
