/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.biosis.biosislite.utiles;

import com.biosis.biosislite.algoritmo.AnalizadorAsistencia;
import com.biosis.biosislite.controladores.EmpleadoControlador;
import com.biosis.biosislite.entidades.asistencia.Asistencia;
import com.biosis.biosislite.entidades.asistencia.DetalleAsistencia;
import com.biosis.biosislite.entidades.escalafon.Empleado;
import com.biosis.biosislite.vistas.dialogos.DlgEmpleado;
import com.biosis.biosislite.vistas.dialogos.DlgPermisoCRU;
import com.personal.utiles.FechaUtil;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Francis
 */
public class FormGeneradorMarcacion extends javax.swing.JFrame {

    /**
     * Creates new form FormGeneradorMarcacion
     */
    private final DateFormat fechaHora = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

    private class AsistenciaZK {

        private int userID;
        private Date checkTime;
        private final String checkType = "I";
        private final int verifyCode = 0;
        private final int workCode = 0;
        private int sensorID;
        private final int userExtFmt = 1;

        public Date getCheckTime() {
            return checkTime;
        }

        public void setCheckTime(Date checkTime) {
            this.checkTime = checkTime;
        }

        public int getUserID() {
            return userID;
        }

        public void setUserID(int userID) {
            this.userID = userID;
        }

        public int getSensorID() {
            return sensorID;
        }

        public void setSensorID(int sensorID) {
            this.sensorID = sensorID;
        }

        public String getSQL() {
            String preSQL = "INSERT INTO CHECKINOUT(USERID,CHECKTIME,CHECKTYPE,VERIFYCODE,SENSORID,WorkCode,UserExtFmt) "
                    + "VALUES('%s','%s','%s','%s','%s','%s','%s');\n";
            return String.format(preSQL, this.userID, fechaHora.format(this.checkTime), this.checkType, this.verifyCode, this.sensorID, this.workCode, this.userExtFmt);
        }
    }

    private Empleado empleado;

    private final EmpleadoControlador empc = new EmpleadoControlador();
    private final AnalizadorAsistencia analizador = new AnalizadorAsistencia();

    public FormGeneradorMarcacion() {
        initComponents();
        iniciarMascara();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        pnlSuperior = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlDatos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEmpleado = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtEquipo = new javax.swing.JTextField();
        txtFechaInicio = new javax.swing.JFormattedTextField(this.mascaraFecha);
        txtFechaFin = new javax.swing.JFormattedTextField(this.mascaraFecha);
        txtUsuario = new javax.swing.JTextField();
        pnlResultado = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        pnlSuperior.setLayout(new java.awt.GridBagLayout());

        lblTitulo.setBackground(new java.awt.Color(204, 204, 255));
        lblTitulo.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Generar marcaciones");
        lblTitulo.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlSuperior.add(lblTitulo, gridBagConstraints);

        jLabel1.setText("Se generarán marcaciones acorde a los parámetros, y se podrán exportar a un archivo EXCEL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlSuperior.add(jLabel1, gridBagConstraints);

        jPanel1.add(pnlSuperior, java.awt.BorderLayout.NORTH);

        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        jPanel2Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        pnlDatos.setLayout(jPanel2Layout);

        jLabel2.setText("ID usuario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatos.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Equipo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatos.add(jLabel3, gridBagConstraints);

        jLabel5.setText("Fecha inicio:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatos.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Fecha fin:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatos.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Empleado:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatos.add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        pnlDatos.add(txtEmpleado, gridBagConstraints);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatos.add(jButton1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        pnlDatos.add(txtEquipo, gridBagConstraints);

        txtFechaInicio.setColumns(10);
        txtFechaInicio.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtFechaInicio.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        pnlDatos.add(txtFechaInicio, gridBagConstraints);

        txtFechaFin.setColumns(10);
        txtFechaFin.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtFechaFin.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        pnlDatos.add(txtFechaFin, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        pnlDatos.add(txtUsuario, gridBagConstraints);

        jPanel1.add(pnlDatos, java.awt.BorderLayout.CENTER);

        pnlResultado.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jButton2.setText("Generar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        pnlResultado.add(jPanel2, java.awt.BorderLayout.NORTH);

        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane1.setViewportView(txtResultado);

        pnlResultado.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(pnlResultado, java.awt.BorderLayout.SOUTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DlgEmpleado dlgEmpleado = new DlgEmpleado(new JInternalFrame());
        this.empleado = dlgEmpleado.getSeleccionado();
        if (this.empleado != null) {
            txtEmpleado.setText(this.empleado.getNombreCompleto());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            /*
            Primero analizamos la asistencia que hay entre esas fechas, sin interprete
            luego llenamos los faltantes con objetos del tipo asistencia
             */
            List<Empleado> empleadoList = new ArrayList();
            empleadoList.add(empleado);
            Date fechaInicio = HerramientaGeneral.formatoFecha.parse(txtFechaInicio.getText());
            Date fechaFin = HerramientaGeneral.formatoFecha.parse(txtFechaFin.getText());
            List<Asistencia> asistenciaList = analizador.analizarAsistencia(empleadoList, fechaInicio, fechaFin);

            /*
            Ahora con la asistencia de la persona empezamos a recorrer donde ha faltado y generamos un bean
             */
            int userID = Integer.parseInt(txtUsuario.getText());
            int equipoID = Integer.parseInt(txtEquipo.getText());
            List<AsistenciaZK> asistenciaZKList = new ArrayList<>();
            for (Asistencia asistencia : asistenciaList) {
                if (asistencia.getResultado() == AnalizadorAsistencia.ASISTENCIA) {
                    List<DetalleAsistencia> detalleList = asistencia.getDetalleAsistenciaList();
                    for (DetalleAsistencia detalleAsistencia : detalleList) {
                        if (detalleAsistencia.getHoraEvento() == null) {
                            /*
                            CREAMOS LOS EVENTOS DE ASISTENCIA
                             */
                            AsistenciaZK asistenciaZK = new AsistenciaZK();
                            asistenciaZK.setUserID(userID);
                            asistenciaZK.setSensorID(equipoID);
                            asistenciaZK.setCheckTime(FechaUtil.unirFechaHora(asistencia.getFecha(), detalleAsistencia.getHoraReferencia()));

                            asistenciaZKList.add(asistenciaZK);
                        }
                    }
                }
            }

            StringBuilder sb = new StringBuilder("");
            asistenciaZKList.stream().forEach(zk -> sb.append(zk.getSQL()));
            txtResultado.setText(sb.toString());
        } catch (ParseException ex) {
            Logger.getLogger(FormGeneradorMarcacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormGeneradorMarcacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormGeneradorMarcacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormGeneradorMarcacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormGeneradorMarcacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormGeneradorMarcacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JPanel pnlResultado;
    private javax.swing.JPanel pnlSuperior;
    private javax.swing.JTextField txtEmpleado;
    private javax.swing.JTextField txtEquipo;
    private javax.swing.JFormattedTextField txtFechaFin;
    private javax.swing.JFormattedTextField txtFechaInicio;
    private javax.swing.JTextArea txtResultado;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    private MaskFormatter mascaraFecha;

    private void iniciarMascara() {
        try {
            this.mascaraFecha = new MaskFormatter("##/##/####");
            this.mascaraFecha.setPlaceholderCharacter('_');
//            this.mascara.setInvalidCharacters("A'");
        } catch (ParseException ex) {
            Logger.getLogger(DlgPermisoCRU.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
